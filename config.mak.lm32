# This is config.mak for Lattice Mico32 musl using clang and 
# targeting qemu.
ARCH = lm32
prefix = ./install
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
libdir = $(prefix)/lib
includedir = $(prefix)/include
syslibdir = /lib
CC = clang
CFLAGS= -Wa,-I./crt/lm32 -march=lm32 -target lm32 -Os -pipe -ccc-gcc-name lm32-rtems4.11-gcc -fomit-frame-pointer -fno-unwind-tables -fno-asynchronous-unwind-tables -Wa,--noexecstack -fno-stack-protector -g
CFLAGS_C99FSE = -std=c99 -nostdinc -ffreestanding 
CPPFLAGS = 
LDFLAGS = -Wl,--hash-style=both 
CROSS_COMPILE = lm32-rtems4.11-
LIBCC = -lgcc -lgcc_eh
ALL_TOOLS = tools/musl-gcc tools/musl-clang
ALL_LIBS = $(CRT_LIBS) $(STATIC_LIBS) $(TOOL_LIBS) $(ALL_TOOLS)
all: $(ALL_LIBS)


# -g causes llvm to crash on these two files.
src/regex/regexec.o: src/regex/regexec.c $(GENH) $(IMPH)
	$(CC) $(CFLAGS_ALL_STATIC) -g0 -c -o $@ $<

src/regex/regcomp.o: src/regex/regcomp.c $(GENH) $(IMPH)
	$(CC) $(CFLAGS_ALL_STATIC) -g0 -c -o $@ $<

# Use the C preprocessor on .S files.
%.o: $(ARCH)/%.S
	$(CC) -x assembler-with-cpp -I. $(CFLAGS_ALL_STATIC) -c -o $@ $<

# spec files ain't working on clang.
tools/musl-clang: config.mak
	printf '#!/bin/sh\nexec "$${REALCLANG:-clang}" "$$@" -specs "%s/musl-gcc.specs"\n' "$(libdir)" > $@
	chmod +x $@
